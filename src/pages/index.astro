---
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import Parallax from "@/components/Parallax.astro";
import BlogCard from "@/components/BlogCard.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { getSinglePage } from "@/lib/contentParser.astro";
import { getEntry } from "astro:content";
import { FaGear } from "react-icons/fa6";

const homepage = await getEntry("homepage", "-index");
const { banner, slogan, companies, blog } = homepage.data;

import { Image } from 'astro:assets';

const { blog_folder } = config.settings;

const posts = await getSinglePage(blog_folder);
const sortedPosts = sortByDate(posts);
const latestPosts = sortedPosts.slice(0, config.settings.num_latest_posts);

const importImage = async (imageName, darkMode = false) => {
  if (darkMode) {
    const darkModeImageName = `${imageName}_dark`; // Add "_dark" suffix for dark mode image
    try {
      // Try importing dark mode image
      const { default: darkModeImage } = await import(`../images/companies/${darkModeImageName}.png`);
      return darkModeImage;
    } catch (error) {}
  }
  
  // If dark mode is false or dark mode image not found, import original image
  const { default: originalImage } = await import(`../images/companies/${imageName}.png`);
  return originalImage;
};
---

<Base>
  <!-- Banner -->
  <Parallax 
    imageName={banner.image}
  >
    <div class="text-center md:col-10 lg:col-7">
      <h1
        set:html={markdownify(banner.title)}
        class="mb-4 text-white dark:text-darkmode-primary text-h3 lg:text-h1"
      />
      <p set:html={markdownify(banner.content)} class="mb-8" />
    </div>
  </Parallax>

  <!-- Slogan -->
  <section class="section p-6 lg:p-14 bg-primary dark:bg-darkmode-primary">
    <div class="container">
      <div class="row text-center">
        <h1 class="text-h3 lg:text-h1 text-white dark:text-black flex items-center justify-center">
          <FaGear className="mr-6" />
          {markdownify(slogan.title)}
        </h1>
      </div>
    </div>
  </section>

  <!-- Posts -->
  <section class="section p-6 lg:p-14">
    <div class="container">
      <div class="flex justify-center text-center pb-16">
        <h1
          set:html={markdownify(blog.title)}
          class="text-h3 lg:text-h1 lg:text-h2 mr-6"
        />
        <a class="btn btn-primary lg:mt-1 lg:text-xl" href={blog_folder}>
          {blog.button}
        </a>
      </div>
      <div class="row">
        {
          latestPosts.map((item, index) => (
            <div class="sm:mb-8 sm:col-4" key={index}>
              <BlogCard data={item} loading="lazy" />
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <!-- Companies -->
  <section class="section bg-theme-light dark:bg-darkmode-theme-light p-6 lg:p-14">
    <div class="container">
      <div class="text-center">
        <h1
          set:html={markdownify(companies.title)}
          class="mb-16 text-h4 lg:text-h2"
        />
      </div>
      <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-6 lg:gap-8">
        {companies.logos.map(async company => {
          const { name, image, link } = company;
          // Dynamically import the image based on the company's name and dark mode setting
          const lightImage = await importImage(image);
          const darkImage = await importImage(image, true);

          return (
            <div key={name}>
              <a href={link} target="_blank" rel="noopener noreferrer">
                <Image
                  src={lightImage}
                  alt={name}
                  key={name}
                  className="inline-block dark:hidden"
                  widths={[180, 360, 600, 800]}
                  sizes="(max-width: 640px) 180px, (max-width: 768px) 360px, (max-width: 1024px) 600px, 800px"
                  loading="lazy"
                />
                {darkImage && (
                  <Image
                    src={darkImage}
                    alt={`${name} (Dark Mode)`}
                    key={`${name}-dark`}
                    className="hidden dark:inline-block"
                    widths={[180, 360, 600, 800]}
                    sizes="(max-width: 640px) 180px, (max-width: 768px) 360px, (max-width: 1024px) 600px, 800px"
                    loading="lazy"
                  />
                )}
              </a>
            </div>
          );
        })}
      </div>
    </div>
  </section>
</Base>
