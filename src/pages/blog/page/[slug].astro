---
import config from "@/config/config.json";
import BlogCard from "@/components/BlogCard.astro";
import BlogCategories from "@/components/BlogCategories.astro";
import Pagination from "@/components/Pagination.astro";
import Base from "@/layouts/Base.astro";
import { fetchAndSortPosts } from "@/lib/blogUtils.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { getEntry } from "astro:content";

const { blog_folder } = config.settings;

const { slug } = Astro.params;
const postIndex = await getEntry(blog_folder, "-index");
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const { currentPosts, totalPages } = await fetchAndSortPosts(blog_folder, currentPage, config.settings.pagination);

export async function getStaticPaths() {
  const { blog_folder } = (await import('@/config/config.json')).settings;
  const posts = await getSinglePage(blog_folder);
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = Array.from({ length: totalPages }, (_, i) => ({
    params: { slug: (i + 1).toString() },
  }));

  return paths;
}
---

<Base
  title={postIndex.data.title}
  meta_title={postIndex.data.meta_title}
  image={postIndex.data.image}
  description={postIndex.data.description}
>
  <section class="section pt-6 md:pt-14">
    <BlogCategories />

    <!-- Posts -->
    <div class="container">
      <div class="row">
        {currentPosts.map((item, index) => (
          <div class="mb-14 sm:col-6 lg:col-4" key={index}>
            <BlogCard data={item} loading={index < 6 ? "eager" : "lazy"} />
          </div>
        ))}
      </div>
      <Pagination
        section={blog_folder}
        currentPage={currentPage}
        totalPages={totalPages}
      />
    </div>
  </section>
</Base>
