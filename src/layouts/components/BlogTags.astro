---
import config from "@/config/config.json";
import { getAllTaxonomy, getTaxonomy } from "@/lib/taxonomyParser.astro";
import { humanize, slugify } from "@/lib/utils/textConverter";
import { getSinglePage } from "@/lib/contentParser.astro";

const { blog_folder } = config.settings;

const allTags = await getAllTaxonomy(blog_folder, "tags", false);
const tags = await getTaxonomy(blog_folder, "tags", false);

const posts = await getSinglePage(blog_folder);
---

<nav class="tags-nav text-center mb-8 md:mb-16">
  <ul class="flex flex-wrap justify-center">
    <li class="tag-item m-1">
      <a
        href={`/${blog_folder}`}
        class="tag-link bg-theme-light px-2 md:px-4 py-1 md:py-2 md:text-lg text-dark dark:bg-darkmode-theme-light dark:text-darkmode-dark hover:bg-primary hover:text-white dark:hover:bg-darkmode-primary dark:hover:text-dark"
      >
        All
        <span class="md:ml-2 rounded">
          ({posts.length})
        </span>
      </a>
    </li>
    {tags.map((tag: string) => {
      const count = allTags.filter((c) => c === tag).length;
      return (
        <li class="tag-item m-1" key={tag}>
          <a
            href={`/tags/${slugify(tag)}`}
            class="tag-link bg-theme-light px-2 md:px-4 py-1 md:py-2 md:text-lg text-dark dark:bg-darkmode-theme-light dark:text-darkmode-dark hover:bg-primary hover:text-white dark:hover:bg-darkmode-primary dark:hover:text-dark"
          >
            {humanize(tag)}
            <span class="md:ml-2 rounded">
              ({count})
            </span>
          </a>
        </li>
      );
    })}
  </ul>
</nav>
