---
const { imageName } = Astro.props;
const basePath = `/images/parallax/${imageName}`;
const lowResImage = `${basePath}__small.jpg`;  // Low resolution image path
const highResImage = `${basePath}.jpg`; // High resolution image path
---

<div
  class="parallax bg-cover bg-center min-h-screen flex items-center justify-center text-white dark:text-darkmode-primary"
  style={`background-image: url(${lowResImage});`}
  data-high-res-image={highResImage}
>
  <slot />
</div>

<style>
  /* Parallax effect */
  .parallax {
    background-attachment: fixed;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: top; /* Center the background image */
    background-size: 120% auto;
    transition: background-image 0.5s ease-in-out;
  }

  /* Disable parallax effect on mobile devices */
  @media (max-width: 768px) {
    .parallax {
      background-attachment: scroll;
    }
  }

  @media (max-width: 330px) {
    .parallax {
      background-size: 150% auto;
      min-height: 100px;
    }
  }

  @media (min-width: 330px) and (max-width: 640px) {
    .parallax {
      background-size: 150% auto;
      min-height: 250px;
    }
  }

  @media (min-width: 640px) and (max-width: 768px) {
    .parallax {
      min-height: 350px;
    }
  }

  @media (min-width: 768px) and (max-width: 1024px) {
    .parallax {
      min-height: 480px;
    }
  }

  @media (min-width: 1024px) and (max-width: 1280px) {
    .parallax {
      min-height: 600px;
    }
  }

  @media (min-width: 1280px) and (max-width: 1536px) {
    .parallax {
      min-height: 700px;
    }
  }

  @media (min-width: 1536px) {
    .parallax {
      background-size: 100% auto;
      min-height: 800px;
    }
  }
</style>

<script>
  function loadHighResImage() {
    const parallax = document.querySelector('.parallax');
    const highResImage = parallax.getAttribute('data-high-res-image');
    const img = new Image();
    img.src = highResImage;
    img.onload = () => {
      parallax.style.backgroundImage = `url(${highResImage})`;
    };
    img.onerror = () => {
      console.error(`Failed to load high-resolution image: ${highResImage}`);
    };
  }

  document.addEventListener('DOMContentLoaded', () => {
    loadHighResImage();
  });

  document.addEventListener('astro:after-swap', () => {
    loadHighResImage();
  });
</script>
