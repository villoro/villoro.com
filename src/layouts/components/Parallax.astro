---
const { parallaxImage } = Astro.props;
const imageSize330 = `${parallaxImage}?w=330`;
const imageSize640 = `${parallaxImage}?w=640`;
const imageSize768 = `${parallaxImage}?w=768`;
const imageSize1024 = `${parallaxImage}?w=1024`;
const imageSize1280 = `${parallaxImage}?w=1280`;
const imageSize1536 = `${parallaxImage}?w=1536`;
const backgroundImageStyle  = `background-image: url(${parallaxImage})`;
---

<div
  class="parallax bg-cover bg-center min-h-screen flex items-center justify-center text-white dark:text-darkmode-primary"
  style={backgroundImageStyle}
>
  <slot />
</div>

<style>
  /* Parallax effect */
  .parallax {
    background-attachment: fixed;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: top; /* Center the background image */
    background-size: 120% auto;
  }

  @media (max-width: 330px) {
    .parallax {
      background-size: 150% auto;
      background-image: url(${imageSize330});
      min-height: 100px;
    }
  }

  @media (min-width: 330px) and (max-width: 640px) {
    .parallax {
      background-size: 150% auto;
      background-image: url(${imageSize640});
      min-height: 250px;
    }
  }

  @media (min-width: 640px) and (max-width: 768px) {
    .parallax {
      min-height: 350px;
      background-image: url(${imageSize768});
    }
  }

  @media (min-width: 768px) and (max-width: 1024px) {
    .parallax {
      min-height: 480px;
      background-image: url(${imageSize1024});
    }
  }

  @media (min-width: 1024px) and (max-width: 1280px) {
    .parallax {
      min-height: 600px;
      background-image: url(${imageSize1280});
    }
  }

  @media (min-width: 1280px) and (max-width: 1536px) {
    .parallax {
      min-height: 700px;
      background-image: url(${imageSize1536});
    }
  }

  @media (min-width: 1536px) {
    .parallax {
      background-size: 100% auto;
      background-image: url(${parallaxImage});
      min-height: 800px;
    }
  }
</style>
