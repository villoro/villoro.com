---
import { getSinglePage } from "@/lib/contentParser.astro";
import { slugify } from "@/lib/utils/textConverter";

// get taxonomy from frontmatter
export const getTaxonomy = async (collection: any, name: string, slugifyTags: boolean = true) => {
  const singlePages = await getSinglePage(collection);

  let taxonomies = [];
  singlePages.forEach((page) => {
    const category = page.data[name];
    if (Array.isArray(category)) {
      category.forEach((item) => {
        taxonomies.push(slugifyTags ? slugify(item) : item);
      });
    } else if (typeof category === 'string') {
      taxonomies.push(slugifyTags ? slugify(category) : category);
    }
  });

  return [...new Set(taxonomies)];
};

// get all taxonomies from frontmatter
export const getAllTaxonomy = async (collection: any, name: string, slugifyTags: boolean = true) => {
  const singlePages = await getSinglePage(collection);

  let taxonomies = [];
  singlePages.forEach((page) => {
    const category = page.data[name];
    if (Array.isArray(category)) {
      category.forEach((item) => {
        taxonomies.push(slugifyTags ? slugify(item) : item);
      });
    } else if (typeof category === 'string') {
      taxonomies.push(slugifyTags ? slugify(category) : category);
    }
  });

  return taxonomies;
};
---
